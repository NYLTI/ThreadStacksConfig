eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true

jwt.secret=this-is-a-very-secure-secret-key-for-dev-environment-only-do-not-use-on-prod

jwt.expiration=900000

security.basic-token=this-is-a-secure-basic-token-for-dev-only

#optimization - increasing netty worker threads
reactor.netty.ioWorkerCount=32

# Max pending connection queue
reactor.netty.pool.leasing-strategy=lru

# Enable connection keep-alive
server.connection-timeout=5s

server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/plain
server.compression.min-response-size=1024

spring.cloud.gateway.httpclient.connect-timeout=5000
spring.cloud.gateway.httpclient.response-timeout=10s

spring.cloud.gateway.httpclient.pool.type=fixed
spring.cloud.gateway.httpclient.pool.max-connections=200
spring.cloud.gateway.httpclient.pool.acquire-timeout=5000
spring.cloud.gateway.httpclient.pool.eviction-interval=2s

spring.codec.max-in-memory-size=2MB

#reduce paylad size
server.compression.enabled=true
server.compression.mime-types=application/json
server.compression.min-response-size=1024

#lb
spring.cloud.loadbalancer.cache.enabled=true
spring.cloud.loadbalancer.cache.ttl=10s

spring.cloud.loadbalancer.health-check.enabled=true
spring.cloud.loadbalancer.health-check.path=/actuator/health

#connection pooling
spring.cloud.gateway.httpclient.pool.max-connections=200

#Disc
eureka.client.registry-fetch-interval-seconds=5
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

#locate
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.gateway.discovery.refresh-delay=2s

#management end point
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health, resilience4j.circuitbreakers
management.health.kafka.enabled=true

#kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.topic.user-created=user-created-topic
spring.kafka.topic.room-created=room-created-topic
spring.kafka.topic.moderator-created=moderator-created-topic
spring.kafka.topic.thread-created=thread-created-topic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.consumer.auto-offset-reset=earliest
